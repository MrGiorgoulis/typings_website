{"ast":null,"code":"var _jsxFileName = \"/Users/giorgis/Desktop/typings_website/frontend/src/Components/MainContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport FetchData from './FetchData';\nimport InputContainer from './InputContainer';\nimport { RedoStateContext } from './CommandCenter';\nimport { IsWordValidContext, SetIstWordValidContext } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RandomWordsContext = /*#__PURE__*/React.createContext();\nexport const SetRandomWordsContext = /*#__PURE__*/React.createContext();\nfunction MainContainer() {\n  _s();\n  const [randomWords, setRandomWords] = useState([]);\n  const isWordValid = useContext(IsWordValidContext);\n  const setIsWordValid = useContext(SetIstWordValidContext);\n  const redoState = useContext(RedoStateContext);\n  useEffect(() => {\n    setIsWordValid([]);\n  }, [redoState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(SetRandomWordsContext.Provider, {\n      value: setRandomWords,\n      children: /*#__PURE__*/_jsxDEV(RandomWordsContext.Provider, {\n        value: randomWords,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-container\",\n          children: [/*#__PURE__*/_jsxDEV(FetchData, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputContainer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(MainContainer, \"WSyU1FHtrIAw+lZ8CP1ukg5gOCY=\");\n_c = MainContainer;\nexport default MainContainer;\nvar _c;\n$RefreshReg$(_c, \"MainContainer\");","map":{"version":3,"names":["React","useContext","useEffect","useState","FetchData","InputContainer","RedoStateContext","IsWordValidContext","SetIstWordValidContext","jsxDEV","_jsxDEV","RandomWordsContext","createContext","SetRandomWordsContext","MainContainer","_s","randomWords","setRandomWords","isWordValid","setIsWordValid","redoState","children","Provider","value","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/giorgis/Desktop/typings_website/frontend/src/Components/MainContainer.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport FetchData from './FetchData'\nimport InputContainer from './InputContainer'\nimport { RedoStateContext } from './CommandCenter'\nimport { IsWordValidContext, SetIstWordValidContext } from '../App'\n\nexport const RandomWordsContext = React.createContext()\nexport const SetRandomWordsContext = React.createContext()\n\nfunction MainContainer() {\n\n  const [randomWords, setRandomWords] = useState([])\n\n  const isWordValid = useContext(IsWordValidContext)\n  const setIsWordValid = useContext(SetIstWordValidContext)\n  const redoState = useContext(RedoStateContext)\n\n  useEffect(() => {\n    setIsWordValid([])\n  }, [redoState])\n\n  return (\n    <div>\n      <SetRandomWordsContext.Provider value={setRandomWords}>\n        <RandomWordsContext.Provider value={randomWords}>\n          <div className=\"main-container\">\n            <FetchData />\n            <InputContainer />\n          </div>\n        </RandomWordsContext.Provider>\n      </SetRandomWordsContext.Provider>\n    </div>\n  )\n}\n\nexport default MainContainer"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,gBAAgB,QAAQ,iBAAiB;AAClD,SAASC,kBAAkB,EAAEC,sBAAsB,QAAQ,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnE,OAAO,MAAMC,kBAAkB,gBAAGX,KAAK,CAACY,aAAa,CAAC,CAAC;AACvD,OAAO,MAAMC,qBAAqB,gBAAGb,KAAK,CAACY,aAAa,CAAC,CAAC;AAE1D,SAASE,aAAaA,CAAA,EAAG;EAAAC,EAAA;EAEvB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMe,WAAW,GAAGjB,UAAU,CAACM,kBAAkB,CAAC;EAClD,MAAMY,cAAc,GAAGlB,UAAU,CAACO,sBAAsB,CAAC;EACzD,MAAMY,SAAS,GAAGnB,UAAU,CAACK,gBAAgB,CAAC;EAE9CJ,SAAS,CAAC,MAAM;IACdiB,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC,EAAE,CAACC,SAAS,CAAC,CAAC;EAEf,oBACEV,OAAA;IAAAW,QAAA,eACEX,OAAA,CAACG,qBAAqB,CAACS,QAAQ;MAACC,KAAK,EAAEN,cAAe;MAAAI,QAAA,eACpDX,OAAA,CAACC,kBAAkB,CAACW,QAAQ;QAACC,KAAK,EAAEP,WAAY;QAAAK,QAAA,eAC9CX,OAAA;UAAKc,SAAS,EAAC,gBAAgB;UAAAH,QAAA,gBAC7BX,OAAA,CAACN,SAAS;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACblB,OAAA,CAACL,cAAc;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACqB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEV;AAACb,EAAA,CAxBQD,aAAa;AAAAe,EAAA,GAAbf,aAAa;AA0BtB,eAAeA,aAAa;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}