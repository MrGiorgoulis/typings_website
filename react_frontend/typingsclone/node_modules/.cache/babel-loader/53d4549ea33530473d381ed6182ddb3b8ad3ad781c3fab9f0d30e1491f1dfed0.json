{"ast":null,"code":"var _jsxFileName = \"/home/kurgiorgis/Desktop/Home_Projects/react_projects/typingsclone/src/Components/SettingsBar.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport TextLengthSelector from \"./TextLengthSelector\";\nimport { WpmContext, IsWordValidContext, IsTimerActive, ElapsedTimeContext, SetElapsedTimeContext, SetWpmContext } from \"../App\";\nimport { WordCountContext } from \"./CommandCenter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SettingsBar() {\n  _s();\n  const isWordValid = useContext(IsWordValidContext);\n  const isActive = useContext(IsTimerActive);\n  const elapsedTime = useContext(ElapsedTimeContext);\n  const setElapsedTime = useContext(SetElapsedTimeContext);\n  const setWpm = useContext(SetWpmContext);\n  const wordCount = useContext(WordCountContext);\n  const wpm = useContext(WpmContext);\n  const [acc, setAcc] = useState(null);\n  const [keepResults, setKeepResults] = useState(false);\n  useEffect(() => {\n    if (isActive) {\n      const interval = setInterval(() => {\n        setElapsedTime(prevTime => prevTime + 1);\n      }, 100);\n      return () => clearInterval(interval);\n    } else {\n      if (elapsedTime !== null) {\n        let correctWords = 0;\n        let wordsChecked = 0;\n        isWordValid.map(item => {\n          wordsChecked++;\n          if (item === true) {\n            correctWords++;\n          }\n        });\n        if (elapsedTime > 0) {\n          if (wordsChecked === wordCount) {\n            setWpm(correctWords / (elapsedTime / 10) * 60);\n            setAcc(correctWords / wordCount * 100);\n          } else {\n            console.log(\"WChck \", wordsChecked);\n          }\n        } else {\n          // setWpm(null)    \n        }\n      }\n      setElapsedTime(0);\n    }\n  }, [isActive]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-bar\",\n    children: [/*#__PURE__*/_jsxDEV(TextLengthSelector, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-display\",\n      children: [\"WPM: \", wpm !== null ? parseInt(wpm) : 'XX', \"/ ACC: \", acc !== null ? acc : 'XX']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(SettingsBar, \"xDtthZNj1oe4vULMY3ar5yUHHgg=\");\n_c = SettingsBar;\nexport default SettingsBar;\nvar _c;\n$RefreshReg$(_c, \"SettingsBar\");","map":{"version":3,"names":["React","useContext","useEffect","useState","TextLengthSelector","WpmContext","IsWordValidContext","IsTimerActive","ElapsedTimeContext","SetElapsedTimeContext","SetWpmContext","WordCountContext","jsxDEV","_jsxDEV","SettingsBar","_s","isWordValid","isActive","elapsedTime","setElapsedTime","setWpm","wordCount","wpm","acc","setAcc","keepResults","setKeepResults","interval","setInterval","prevTime","clearInterval","correctWords","wordsChecked","map","item","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","parseInt","_c","$RefreshReg$"],"sources":["/home/kurgiorgis/Desktop/Home_Projects/react_projects/typingsclone/src/Components/SettingsBar.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\"\nimport TextLengthSelector from \"./TextLengthSelector\"\nimport { WpmContext, IsWordValidContext, IsTimerActive, ElapsedTimeContext, SetElapsedTimeContext, SetWpmContext } from \"../App\"\nimport { WordCountContext } from \"./CommandCenter\"\n\nfunction SettingsBar() {\n\n  const isWordValid = useContext(IsWordValidContext)\n  const isActive = useContext(IsTimerActive)\n  const elapsedTime = useContext(ElapsedTimeContext)\n  const setElapsedTime = useContext(SetElapsedTimeContext)\n  const setWpm = useContext(SetWpmContext)\n  const wordCount = useContext(WordCountContext)\n  const wpm = useContext(WpmContext)\n\n  const [acc, setAcc] = useState(null)\n  const [keepResults, setKeepResults] = useState(false)\n\n  useEffect(() => {\n\n    if (isActive) {\n      const interval = setInterval(() => {\n        setElapsedTime((prevTime) => prevTime + 1)\n      }, 100)\n      return () => clearInterval(interval)\n    }\n    else {\n      if (elapsedTime !== null) {\n        let correctWords = 0\n        let wordsChecked = 0\n        isWordValid.map((item) => {\n          wordsChecked++\n          if (item === true) {\n            correctWords++\n          }\n        })\n        if (elapsedTime > 0) {\n          if(wordsChecked===wordCount){\n            setWpm((correctWords / (elapsedTime / 10) * 60))\n            setAcc((correctWords / wordCount) * 100)\n          }\n          else{\n            console.log(\"WChck \", wordsChecked)\n          }\n        }\n        else {\n          // setWpm(null)    \n        }\n      }\n      setElapsedTime(0)\n    }\n  }, [isActive])\n\n  return (\n    <div className=\"settings-bar\">\n      <TextLengthSelector />\n      <div className=\"stats-display\">\n        WPM: {wpm !== null ? parseInt(wpm) : 'XX'} \n      / ACC: {acc !== null ? acc : 'XX'}\n      </div>\n    </div>\n  )\n}\n\nexport default SettingsBar"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}