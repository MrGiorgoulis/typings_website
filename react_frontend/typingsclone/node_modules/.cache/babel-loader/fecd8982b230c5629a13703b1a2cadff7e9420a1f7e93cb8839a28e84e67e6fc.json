{"ast":null,"code":"var _jsxFileName = \"/home/kurgiorgis/Desktop/Home_Projects/react_projects/typingsclone/src/Components/InputContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport RedoButton from './RedoButton';\nimport { RandomWordsContext } from './MainContainer';\nimport { WordCountContext, RedoStateContext } from './CommandCenter';\nimport { SetWpmContext, ElapsedTimeContext, SetStopTimer, IsWordValidContext, SetIstWordValidContext } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InputContainer() {\n  _s();\n  const elapsedTime = useContext(ElapsedTimeContext);\n  const setWpm = useContext(SetWpmContext);\n  const randomWords = useContext(RandomWordsContext);\n  const wordCount = useContext(WordCountContext);\n  const isWordValid = useContext(IsWordValidContext);\n  const setIsWordValid = useContext(SetIstWordValidContext);\n  const shouldReRender = useContext(RedoStateContext);\n  const seTimer = useContext(SetStopTimer);\n  const [valid, setValid] = useState(null);\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [currentLetterIndex, setCurrentLetterIndex] = useState(0);\n  const [inputValue, setInputValue] = useState('');\n  const inputRef = useRef(null);\n  const validateLetter = e => {\n    setCurrentLetterIndex(prev => prev + 1);\n    const expectedWord = randomWords[currentWordIndex].slice(0, currentLetterIndex + 1);\n    const typedWord = `${e.target.value}${e.key}`;\n\n    // console.log(\"Typed Word: \", typedWord)\n    // console.log(\"ExpectedWord: \", expectedWord)\n\n    if (expectedWord === typedWord) {\n      setValid(true);\n      if (valid) {\n        setWpm(correctWords / (elapsedTime / 10) * 60);\n        setAcc(correctWords / wordCount * 100);\n      }\n    } else {\n      setValid(false);\n    }\n  };\n  const validateSpace = e => {\n    const expectedWord = randomWords[currentWordIndex];\n    const typedWord = e.target.value;\n    const isValid = expectedWord === typedWord;\n\n    // Create a new array by concatenating the current isWordValid array\n    const updatedIsWordValid = [...isWordValid, isValid];\n\n    // Update the state with the new array\n    setIsWordValid(updatedIsWordValid);\n  };\n  const validateBackSpace = e => {\n    if (currentLetterIndex - 1 >= 0) {\n      setCurrentLetterIndex(prev => prev - 1);\n      const expectedWord = randomWords[currentWordIndex].slice(0, currentLetterIndex - 1);\n      const typedWord = e.target.value.slice(0, e.target.value.length - 1);\n      if (expectedWord === typedWord) {\n        setValid(true);\n      } else {\n        setValid(false);\n      }\n    }\n  };\n  const handleChange = e => {\n    if (e.keyCode >= 65 && e.keyCode <= 90) {\n      if (currentWordIndex === 0 && currentLetterIndex === 0) {\n        seTimer(true);\n      }\n      validateLetter(e);\n    } else if (e.keyCode === 32) {\n      validateSpace(e);\n      if (currentWordIndex + 1 < wordCount) {\n        setCurrentLetterIndex(0);\n        setCurrentWordIndex(prev => prev + 1);\n        e.preventDefault();\n        setInputValue('');\n        setValid(true);\n      } else {\n        seTimer(false);\n        e.preventDefault();\n        setInputValue('');\n      }\n    } else if (e.keyCode === 8) {\n      validateBackSpace(e);\n    }\n  };\n  useEffect(() => {\n    setInputValue('');\n    setCurrentLetterIndex(0);\n    setCurrentWordIndex(0);\n    setValid(true);\n    inputRef.current.focus();\n  }, [shouldReRender]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"text-input\",\n        ref: inputRef,\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        onKeyDown: handleChange,\n        style: {\n          background: valid === null ? '' : valid ? '' : '#daa398'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RedoButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(InputContainer, \"DWpFr1tND7Zdu1H43nAjWCQG9ac=\");\n_c = InputContainer;\nexport default InputContainer;\nvar _c;\n$RefreshReg$(_c, \"InputContainer\");","map":{"version":3,"names":["React","useContext","useEffect","useRef","useState","RedoButton","RandomWordsContext","WordCountContext","RedoStateContext","SetWpmContext","ElapsedTimeContext","SetStopTimer","IsWordValidContext","SetIstWordValidContext","jsxDEV","_jsxDEV","InputContainer","_s","elapsedTime","setWpm","randomWords","wordCount","isWordValid","setIsWordValid","shouldReRender","seTimer","valid","setValid","currentWordIndex","setCurrentWordIndex","currentLetterIndex","setCurrentLetterIndex","inputValue","setInputValue","inputRef","validateLetter","e","prev","expectedWord","slice","typedWord","target","value","key","correctWords","setAcc","validateSpace","isValid","updatedIsWordValid","validateBackSpace","length","handleChange","keyCode","preventDefault","current","focus","children","className","type","ref","onChange","onKeyDown","style","background","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kurgiorgis/Desktop/Home_Projects/react_projects/typingsclone/src/Components/InputContainer.js"],"sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react'\nimport RedoButton from './RedoButton'\nimport { RandomWordsContext } from './MainContainer'\nimport { WordCountContext, RedoStateContext } from './CommandCenter'\nimport { SetWpmContext, ElapsedTimeContext, SetStopTimer, IsWordValidContext, SetIstWordValidContext } from '../App'\n\nfunction InputContainer() {\n\n  const elapsedTime = useContext(ElapsedTimeContext)\n  const setWpm = useContext(SetWpmContext)\n  const randomWords = useContext(RandomWordsContext)\n  const wordCount = useContext(WordCountContext)\n  const isWordValid = useContext(IsWordValidContext)\n  const setIsWordValid = useContext(SetIstWordValidContext)\n  const shouldReRender = useContext(RedoStateContext)\n  const seTimer = useContext(SetStopTimer)\n\n  const [valid, setValid] = useState(null)\n  const [currentWordIndex, setCurrentWordIndex] = useState(0)\n  const [currentLetterIndex, setCurrentLetterIndex] = useState(0)\n  const [inputValue, setInputValue] = useState('')\n\n  const inputRef = useRef(null)\n\n  const validateLetter = e => {\n    setCurrentLetterIndex(prev => prev + 1)\n\n    const expectedWord = randomWords[currentWordIndex].slice(0, currentLetterIndex + 1)\n    const typedWord = `${e.target.value}${e.key}`\n\n    // console.log(\"Typed Word: \", typedWord)\n    // console.log(\"ExpectedWord: \", expectedWord)\n\n    if (expectedWord === typedWord) {\n      setValid(true)\n      if (valid) {\n        setWpm((correctWords / (elapsedTime / 10) * 60))\n        setAcc((correctWords / wordCount) * 100)\n      }\n    }\n    else {\n      setValid(false)\n    }\n  }\n\n  const validateSpace = e => {\n    const expectedWord = randomWords[currentWordIndex]\n    const typedWord = e.target.value\n\n    const isValid = expectedWord === typedWord;\n\n    // Create a new array by concatenating the current isWordValid array\n    const updatedIsWordValid = [...isWordValid, isValid];\n\n    // Update the state with the new array\n    setIsWordValid(updatedIsWordValid);\n  };\n\n  const validateBackSpace = e => {\n    if (currentLetterIndex - 1 >= 0) {\n      setCurrentLetterIndex(prev => prev - 1)\n\n      const expectedWord = randomWords[currentWordIndex].slice(0, currentLetterIndex - 1)\n      const typedWord = e.target.value.slice(0, e.target.value.length - 1)\n\n      if (expectedWord === typedWord) {\n        setValid(true)\n      }\n      else {\n        setValid(false)\n      }\n    }\n  }\n\n  const handleChange = e => {\n    if (e.keyCode >= 65 && e.keyCode <= 90) {\n      if (currentWordIndex === 0 && currentLetterIndex === 0) {\n        seTimer(true)\n      }\n      validateLetter(e)\n    }\n    else if (e.keyCode === 32) {\n      validateSpace(e)\n      if (currentWordIndex + 1 < wordCount) {\n        setCurrentLetterIndex(0)\n        setCurrentWordIndex(prev => prev + 1)\n        e.preventDefault()\n        setInputValue('')\n        setValid(true)\n\n      }\n      else {\n        seTimer(false)\n        e.preventDefault()\n        setInputValue('')\n      }\n    }\n    else if (e.keyCode === 8) {\n      validateBackSpace(e)\n    }\n  }\n\n  useEffect(() => {\n    setInputValue('')\n    setCurrentLetterIndex(0)\n    setCurrentWordIndex(0)\n    setValid(true)\n    inputRef.current.focus()\n  }, [shouldReRender])\n\n  return (\n    <div>\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          className=\"text-input\"\n          ref={inputRef}\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n          onKeyDown={\n            handleChange\n          }\n          style={{\n            background: valid === null ? '' : valid ? '' : '#daa398'\n          }}\n        ></input>\n        <RedoButton />\n      </div>\n    </div>\n  )\n}\n\nexport default InputContainer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}